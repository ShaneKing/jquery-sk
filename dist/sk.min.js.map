{"version":3,"sources":["sk.min.js"],"names":["global","factory","module","exports","define","amd","jsface","jQuery","window","this","DO_NOT_EXPOSE_SK_TO_GLOBAL","_sk","$sk","noConflict","extend","options","name","src","copy","copyIsArray","clone","target","arguments","i","length","deep","isFunction","isPlainObject","Array","isArray","undefined","a","array","b","boolean","String","d","date","defaultDate","rtnDate","Date","toString","n","number","isNaN","Number","o","object","s","string","SKResult","Class","constructor","result","_result","get","set","fmtMsg","msg","fmt","skFmt","arg","success","createResult"],"mappings":"CAAE,SAAUA,EAAQC,GACI,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAI9CD,OAAOC,QAAUF,EACU,kBAAXG,SAAyBA,OAAOC,IAGhDD,OAAO,MAAO,SAAU,UAAWH,GAMnCA,EAAQD,EAAQM,OAAQC,SAER,mBAAXC,QAAyBA,OAASC,KAAM,SAAUD,EAAQF,EAAQC,EAAQG,GACjF,GAAIC,GAAMH,EAAOI,IACbA,IACJJ,GAAOI,IAAMA,EAEbA,EAAIC,WAAa,WAEf,MADAL,GAAOI,IAAMD,EACNC,GAKTA,EAAIE,OAAS,WACX,GAAIC,GAASC,EAAMC,EAAKC,EAAMC,EAAaC,EACzCC,EAASC,UAAU,OACnBC,EAAI,EACJC,EAASF,UAAUE,OACnBC,GAAO,CAiBT,KAfsB,iBAAXJ,KACTI,EAAOJ,EAEPA,EAASC,UAAUC,OACnBA,KAGoB,gBAAXF,IAAwBd,EAAOmB,WAAWL,KACnDA,MAGEE,IAAMC,IACRH,EAASZ,KACTc,KAESC,EAAJD,EAAYA,IAEjB,GAAkC,OAA5BR,EAAUO,UAAUC,IAExB,IAAKP,IAAQD,GACXE,EAAMI,EAAOL,GACbE,EAAOH,EAAQC,GAEXK,IAAWH,IAIXO,GAAQP,IAAUX,EAAOoB,cAAcT,KACvCC,EAAcS,MAAMC,QAAQX,MAC1BC,GACFA,GAAc,EACdC,MAEAA,EAAQH,GAAOV,EAAOoB,cAAcV,GAAOA,KAG7CI,EAAOL,GAAQJ,EAAIE,OAAOW,EAAML,EAAOF,IAErBY,SAATZ,IACTG,EAAOL,GAAQE,GAMvB,OAAOG,IAKTT,EAAImB,EAAI,SAAUC,GAChB,MAAOJ,OAAMC,QAAQG,GAASA,MAIhCpB,EAAIqB,EAAI,SAAUC,GAChB,MAA2B,SAApBC,OAAOD,IAAmC,SAAZA,GAAsBA,GAI7DtB,EAAIwB,EAAI,SAAUC,EAAMC,GACtB,GAAIC,GAAUD,EAAcA,EAAc,GAAIE,KAC9C,OAAQH,aAAgBG,MAA6B,iBAApBH,EAAKI,WAAgCF,EAAUF,EAAQE,GAI1F3B,EAAI8B,EAAI,SAAUC,GAChB,MAAOC,OAAMC,OAAOF,IAAW,EAAIE,OAAOF,IAI5C/B,EAAIkC,EAAI,SAAUC,GAChB,MAAOxC,GAAOoB,cAAcoB,GAAUA,MAIxCnC,EAAIoC,EAAI,SAAUC,GAChB,MAAOd,QAAOc,GAGhB,IAAIC,GAAW5C,EAAO6C,OACpBC,YAAa,SAAUC,GACrB5C,KAAK6C,QAAUD,GAGjBA,QACEE,IAAK,WACH,MAAO9C,MAAK6C,SAEdE,IAAK,SAAUH,GACb5C,KAAK6C,QAAUD,IAInBI,OAAQ,WACN,MAAOhD,MAAK6C,QAAQI,IAAMjD,KAAK6C,QAAQI,IAAMjD,KAAK6C,QAAQK,IAAIC,MAAMnD,KAAK6C,QAAQO,MAGnFC,QAAS,WACP,MAAOrD,MAAK6C,QAAQQ,UAcxB,OARAlD,GAAImD,aAAe,SAAUV,GAC3B,MAAO,IAAIH,GAASG,IAIoB,mBAA/B3C,IAA8CA,KAA+B,IACtFF,EAAOI,IAAMD,GAERC","file":"sk.min.js","sourcesContent":[";(function (global, factory) {\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    // CMD\n    // all dependencies need to passed as parameters manually,\n    // will not require here.\n    module.exports = factory;\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as sk\n    // TODO how to define the jquery plugin here?\n    define('sk', ['jsface', 'jquery'], factory);\n  } else {\n    // in browser, global is window.\n    // all dependencies were loaded already.\n    // bootstrap and jquery's plugin are all attached to jquery,\n    // expose $sk and all components to window.\n    factory(global, jsface, jQuery);\n  }\n}(typeof window !== 'undefined' ? window : this, function (window, jsface, jQuery, DO_NOT_EXPOSE_SK_TO_GLOBAL) {\n  var _sk = window.$sk;\n  var $sk = {};\n  window.$sk = $sk;\n\n  $sk.noConflict = function () {\n    window.$sk = _sk;\n    return $sk;\n  };\n\n  // insert all source code here\n  // copy from jQuery\n  $sk.extend = function () {\n    var options, name, src, copy, copyIsArray, clone,\n      target = arguments[0] || {},\n      i = 1,\n      length = arguments.length,\n      deep = false;\n    // Handle a deep copy situation\n    if (typeof target === \"boolean\") {\n      deep = target;\n      // Skip the boolean and the target\n      target = arguments[i] || {};\n      i++;\n    }\n    // Handle case when target is a string or something (possible in deep copy)\n    if (typeof target !== \"object\" && !jQuery.isFunction(target)) {\n      target = {};\n    }\n    // Extend jQuery itself if only one argument is passed\n    if (i === length) {\n      target = this;\n      i--;\n    }\n    for (; i < length; i++) {\n      // Only deal with non-null/undefined values\n      if (( options = arguments[i] ) != null) {\n        // Extend the base object\n        for (name in options) {\n          src = target[name];\n          copy = options[name];\n          // Prevent never-ending loop\n          if (target === copy) {\n            continue;\n          }\n          // Recurse if we're merging plain objects or arrays\n          if (deep && copy && ( jQuery.isPlainObject(copy) ||\n            ( copyIsArray = Array.isArray(copy) ) )) {\n            if (copyIsArray) {\n              copyIsArray = false;\n              clone = [];//src && jQuery.isArray( src ) ? src : []; //sk different with jQuery\n            } else {\n              clone = src && jQuery.isPlainObject(src) ? src : {};\n            }\n            // Never move original objects, clone them\n            target[name] = $sk.extend(deep, clone, copy);\n            // Don't bring in undefined values\n          } else if (copy !== undefined) {\n            target[name] = copy;\n          }\n        }\n      }\n    }\n    // Return the modified object\n    return target;\n  };\n\n  // sk body here\n  //Always return valid Array, if invalid return empty array\n  $sk.a = function (array) {\n    return Array.isArray(array) ? array : [];\n  };\n\n  //Just true return true, other return false\n  $sk.b = function (boolean) {\n    return String(boolean) === 'true' && boolean !== 'true' && boolean;\n  };\n\n  //Always return valid Date, if invalid return defaultDate or new Date()\n  $sk.d = function (date, defaultDate) {\n    var rtnDate = defaultDate ? defaultDate : new Date();\n    return (date instanceof Date) ? (date.toString() === 'Invalid Date' ? rtnDate : date) : rtnDate;\n  };\n\n  //Can be to Number than return value of number, other return 0\n  $sk.n = function (number) {\n    return isNaN(Number(number)) ? 0 : Number(number);\n  };\n\n  //Always return valid Object, if invalid return empty object\n  $sk.o = function (object) {\n    return jQuery.isPlainObject(object) ? object : {};\n  };\n\n  //Return the String of input\n  $sk.s = function (string) {\n    return String(string);\n  };\n\n  var SKResult = jsface.Class({\n    constructor: function (result) {\n      this._result = result;\n    },\n\n    result: {\n      get: function () {\n        return this._result;\n      },\n      set: function (result) {\n        this._result = result;\n      }\n    },\n\n    fmtMsg: function () {\n      return this._result.msg ? this._result.msg : this._result.fmt.skFmt(this._result.arg);\n    },\n\n    success: function () {\n      return this._result.success;\n    }\n\n  });\n\n  //{\"success\":true,\"code\":\"\",\"fmt\":\"\",\"arg\":{},\"msg\":\"\",\"data\":{}}\n  $sk.createResult = function (result) {\n    return new SKResult(result)\n  };\n\n  // reset to old $sk\n  if (typeof DO_NOT_EXPOSE_SK_TO_GLOBAL !== 'undefined' && DO_NOT_EXPOSE_SK_TO_GLOBAL === true) {\n    window.$sk = _sk;\n  }\n  return $sk;\n}));\n"],"sourceRoot":"/source/"}
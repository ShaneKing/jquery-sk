{"version":3,"sources":["sk.min.js"],"names":["checkGlobal","value","Object","SK","this","prototype","constructor","STR_OF_INFINITY","STR_OF_INVALID_DATE","STR_OF_NAN","STR_OF_NULL","STR_OF_UNDEFINED","ARR_OF_BAD_VALUE","STR_OF_TRUE","STR_OF_CONSTRUCTOR","STR_OF_BOOLEAN","STR_OF_FUNCTION","STR_OF_NUMBER","STR_OF_OBJECT","STR_OF_STRING","TAG_OF_ARGS","TAG_OF_ARRAY","TAG_OF_BOOLEAN","TAG_OF_DATE","TAG_OF_ERROR","TAG_OF_FUNCTION","TAG_OF_MAP","TAG_OF_NUMBER","TAG_OF_OBJECT","TAG_OF_PROMISE","TAG_OF_REGEXP","TAG_OF_SET","TAG_OF_STRING","TAG_OF_SYMBOL","REGEXP_OF_SPACE","TYPE_OF_CLASS","PROTO_OF_OBJECT","getPrototypeOf","FUNC_OF_OBJECT_TOSTRING","toString","OWN_OF_OBJECT","hasOwnProperty","FN_OF_OBJECT_TOSTRING","RST_OF_OBJECT_TOSTRING","call","typeOf","obj","isFunction","isPlainObject","proto","Ctor","extend","options","name","src","copy","copyIsArray","clone","target","arguments","i","length","deep","Array","isArray","undefined","$","context","innerContext","root","inner$","a","array","b","boolean","String","d","date","defaultDate","rtnDate","Date","n","number","defaultNumber","isNaN","Number","o","object","s","string","defaultString","indexOf","freeExports","exports","freeModule","module","freeGlobal","global","freeSelf","self","thisGlobal","Function","_SK","noConflict","define","amd"],"mappings":"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","file":"sk.min.js","sourcesContent":["(function () {\n  'use strict';\n\n  // Export SK.\n  var SK = function () {\n    return this;\n  };\n  SK.prototype = {\n    constructor: SK\n  };\n\n  SK.STR_OF_INFINITY = 'Infinity';\n  SK.STR_OF_INVALID_DATE = 'Invalid Date';\n  SK.STR_OF_NAN = 'NaN';\n  SK.STR_OF_NULL = 'null';\n  SK.STR_OF_UNDEFINED = 'undefined';\n  SK.ARR_OF_BAD_VALUE = [SK.STR_OF_INFINITY, SK.STR_OF_INVALID_DATE, SK.STR_OF_NAN, SK.STR_OF_NULL, SK.STR_OF_UNDEFINED];\n\n  SK.STR_OF_TRUE = 'true';\n\n  SK.STR_OF_CONSTRUCTOR = 'constructor';\n  SK.STR_OF_BOOLEAN = 'boolean';\n  SK.STR_OF_FUNCTION = 'function';\n  SK.STR_OF_NUMBER = 'number';\n  SK.STR_OF_OBJECT = 'object';\n  SK.STR_OF_STRING = 'string';\n\n  SK.TAG_OF_ARGS = '[object Arguments]';\n  SK.TAG_OF_ARRAY = '[object Array]';\n  SK.TAG_OF_BOOLEAN = '[object Boolean]';\n  SK.TAG_OF_DATE = '[object Date]';\n  SK.TAG_OF_ERROR = '[object Error]';\n  SK.TAG_OF_FUNCTION = '[object Function]';\n  SK.TAG_OF_MAP = '[object Map]';\n  SK.TAG_OF_NUMBER = '[object Number]';\n  SK.TAG_OF_OBJECT = '[object Object]';\n  SK.TAG_OF_PROMISE = '[object Promise]';\n  SK.TAG_OF_REGEXP = '[object RegExp]';\n  SK.TAG_OF_SET = '[object Set]';\n  SK.TAG_OF_STRING = '[object String]';\n  SK.TAG_OF_SYMBOL = '[object Symbol]';\n\n  SK.REGEXP_OF_SPACE = /\\s+/;\n\n  SK.TYPE_OF_CLASS = {};\n\n  SK.PROTO_OF_OBJECT = Object.getPrototypeOf;\n\n  SK.FUNC_OF_OBJECT_TOSTRING = SK.TYPE_OF_CLASS.toString;\n\n  SK.OWN_OF_OBJECT = SK.TYPE_OF_CLASS.hasOwnProperty;\n\n  SK.FN_OF_OBJECT_TOSTRING = SK.OWN_OF_OBJECT.toString;\n\n  SK.RST_OF_OBJECT_TOSTRING = SK.FN_OF_OBJECT_TOSTRING.call(Object);\n\n  SK.typeOf = function (obj) {\n    if (obj == null) {\n      return obj + '';\n    }\n    // Support: Android <=2.3 only (functionish RegExp)\n    return typeof obj === SK.STR_OF_OBJECT || typeof obj === SK.STR_OF_FUNCTION ? SK.TYPE_OF_CLASS[SK.FUNC_OF_OBJECT_TOSTRING.call(obj)] || SK.STR_OF_OBJECT : typeof obj;\n  };\n\n  SK.isFunction = function (obj) {\n    return SK.typeOf(obj) === SK.STR_OF_FUNCTION;\n  };\n\n  SK.isPlainObject = function (obj) {\n    var proto, Ctor;\n\n    // Detect obvious negatives\n    // Use toString instead of jQuery.type to catch host objects\n    if (!obj || SK.FUNC_OF_OBJECT_TOSTRING.call(obj) !== SK.TAG_OF_OBJECT) {\n      return false;\n    }\n\n    proto = SK.PROTO_OF_OBJECT(obj);\n\n    // Objects with no prototype (e.g., `Object.create( null )`) are plain\n    if (!proto) {\n      return true;\n    }\n\n    // Objects with prototype are plain if they were constructed by a global Object function\n    Ctor = SK.OWN_OF_OBJECT.call(proto, SK.STR_OF_CONSTRUCTOR) && proto.constructor;\n    return typeof Ctor === SK.STR_OF_FUNCTION && SK.FN_OF_OBJECT_TOSTRING.call(Ctor) === SK.RST_OF_OBJECT_TOSTRING;\n  };\n\n  /** Copy from jQuery, different is array extend */\n  SK.extend = function () {\n    var options, name, src, copy, copyIsArray, clone,\n      target = arguments[0] || {},\n      i = 1,\n      length = arguments.length,\n      deep = false;\n    // Handle a deep copy situation\n    if (typeof target === SK.STR_OF_BOOLEAN) {\n      deep = target;\n      // Skip the boolean and the target\n      target = arguments[i] || {};\n      i++;\n    }\n    // Handle case when target is a string or something (possible in deep copy)\n    if (typeof target !== SK.STR_OF_OBJECT && !SK.isFunction(target)) {\n      target = {};\n    }\n    // Extend jQuery itself if only one argument is passed\n    if (i === length) {\n      target = this;\n      i--;\n    }\n    for (; i < length; i++) {\n      // Only deal with non-null/undefined values\n      if (( options = arguments[i] ) != null) {\n        // Extend the base object\n        for (name in options) {\n          src = target[name];\n          copy = options[name];\n          // Prevent never-ending loop\n          if (target === copy) {\n            continue;\n          }\n          // Recurse if we're merging plain objects or arrays\n          if (deep && copy && (SK.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n            if (copyIsArray) {\n              copyIsArray = false;\n              clone = [];//src && jQuery.isArray( src ) ? src : []; //sk different with jQuery\n            } else {\n              clone = src && SK.isPlainObject(src) ? src : {};\n            }\n            // Never move original objects, clone them\n            target[name] = SK.extend(deep, clone, copy);\n            // Don't bring in undefined values\n          } else if (copy !== undefined) {\n            target[name] = copy;\n          }\n        }\n      }\n    }\n    // Return the modified object\n    return target;\n  };\n\n  /** Namespace */\n  SK.$ = function (context, $) {\n    var innerContext = context ? context : root;\n    var inner$ = $ ? $ : '$sk';\n    if (!innerContext[inner$]) {\n      innerContext[inner$] = {};\n    }\n    return innerContext[inner$];\n  };\n\n  //Always return valid Array, if invalid return empty array\n  SK.a = function (array) {\n    return Array.isArray(array) ? array : [];\n  };\n  //Just true return true, other return false\n  SK.b = function (boolean) {\n    return String(boolean) === SK.STR_OF_TRUE && boolean !== SK.STR_OF_TRUE && boolean;\n  };\n  //Always return valid Date, if invalid return defaultDate or new Date()\n  SK.d = function (date, defaultDate) {\n    var rtnDate = arguments.length > 1 ? defaultDate : new Date();\n    return (date instanceof Date) ? (date.toString() === SK.STR_OF_INVALID_DATE ? rtnDate : date) : rtnDate;\n  };\n  //Can be to Number than return value of number, other return 0\n  SK.n = function (number, defaultNumber) {\n    return isNaN(Number(number)) ? (arguments.length > 1 ? defaultNumber : 0) : Number(number);\n  };\n  //Always return valid Object, if invalid return empty object\n  SK.o = function (object) {\n    return SK.isPlainObject(object) ? object : {};\n  };\n  //Return the String of input\n  SK.s = function (string, defaultString) {\n    return SK.ARR_OF_BAD_VALUE.indexOf(String(string)) === -1 ? String(string) : (arguments.length > 1 ? defaultString : '');\n  };\n\n  /**\n   * Checks if `value` is a global object.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n   */\n  function checkGlobal(value) {\n    return (value && value.Object === Object) ? value : null;\n  }\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == SK.STR_OF_OBJECT && exports;\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == SK.STR_OF_OBJECT && module;\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = checkGlobal(typeof global == SK.STR_OF_OBJECT && global);\n  /** Detect free variable `self`. */\n  var freeSelf = checkGlobal(typeof self == SK.STR_OF_OBJECT && self);\n  /** Detect `this` as the global object. */\n  var thisGlobal = checkGlobal(typeof this == SK.STR_OF_OBJECT && this);\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || thisGlobal || Function('return this')();\n\n  // Save the previous value of the `SK` variable.\n  var _SK = root.SK;\n\n  // Expose SK on the free variable `window` or `self` when available so it's\n  // globally accessible, even when bundled with Browserify, Webpack, etc. This\n  // also prevents errors in cases where SK is loaded by a script tag in the\n  // presence of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch\n  // for more details. Use `SK.noConflict` to remove SK from the global object.\n  (freeSelf || {}).SK = SK;\n\n  // Run sk.js in *noConflict* mode, returning the `SK` variable to its\n  // previous owner. Returns a reference to the SK object.\n  SK.noConflict = function () {\n    root.SK = _SK;\n    return this;\n  };\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == SK.STR_OF_FUNCTION && typeof define.amd == SK.STR_OF_OBJECT && define.amd) {\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"SK\" module.\n    define(function () {\n      return SK;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = SK).SK = SK;\n    // Export for CommonJS support.\n    freeExports.SK = SK;\n  }\n  else {\n    // Export to the global object.\n    root.SK = SK;\n  }\n}.call(this));\n"],"sourceRoot":"/source/"}